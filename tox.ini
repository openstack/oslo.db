[tox]
minversion = 3.18.0
envlist = py3,pep8
ignore_basepython_conflict = true

[testenv]
basepython = python3
allowlist_externals =
  env
passenv =
  OS_TEST_DBAPI_ADMIN_CONNECTION
setenv =
  OS_STDOUT_CAPTURE=true
  OS_STDERR_CAPTURE=true
  BASECOMMAND=stestr run
  {postgresql,all}: PIFPAF_POSTGRESQL=pifpaf -g OS_TEST_DBAPI_ADMIN_CONNECTION run postgresql --
  {mysql,all}: PIFPAF_MYSQL=pifpaf -g OS_TEST_DBAPI_ADMIN_CONNECTION run mysql --
  {mysql,postgresql,all}: BASECOMMAND={toxinidir}/tools/run-pifpaf-tests.sh
# TODO(stephenfin): Remove once we bump our upper-constraint to SQLAlchemy 2.0
  SQLALCHEMY_WARN_20=1
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/zed}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
commands =
  {env:PIFPAF_MYSQL:} {env:PIFPAF_POSTGRESQL:} {env:BASECOMMAND:} {posargs}

[testenv:pep8]
commands =
  pre-commit run -a
  # Run security linter
  bandit -r oslo_db -x tests -n5 --skip B105,B311

[testenv:venv]
commands = {posargs}

[testenv:cover]
setenv =
  PYTHON=coverage run --source oslo_db --parallel-mode
commands =
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml

[testenv:docs]
allowlist_externals =
  rm
deps =
  {[testenv]deps}
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf doc/build doc/source/reference/api
  doc8 -e .rst CONTRIBUTING.rst HACKING.rst README.rst doc/source
  sphinx-build -W --keep-going -b html doc/source doc/build/html

[testenv:releasenotes]
allowlist_externals =
  rm
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/zed}
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -W -d releasenotes/build/doctrees --keep-going -b html releasenotes/source releasenotes/build/html

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
ignore = E123,E125,W504
show-source = True
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[hacking]
import_exceptions =
  oslo_db._i18n

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files, and develop mode disabled
# explicitly to avoid unnecessarily installing the checked-out repo too (this
# further relies on "tox.skipsdist = True" above).
deps = bindep
commands = bindep test
usedevelop = False
